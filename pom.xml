<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://maven.apache.org/POM/4.0.0"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.baeldung</groupId>
    <artifactId>apache-tapestry</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>apache-tapestry</name>
    <packaging>war</packaging>

    <dependencies>
        <!-- To set up an application with a database, change the artifactId below to tapestry-hibernate, 
            and add a dependency on your JDBC driver. You'll also need to add Hibernate configuration files, such 
            as hibernate.cfg.xml. -->
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-core</artifactId>
            <version>${tapestry-release-version}</version>
        </dependency>
        <!-- Include the Log4j implementation for the SLF4J logging framework -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j-release-version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-webresources</artifactId>
            <version>${tapestry-release-version}</version>
        </dependency>
        <!-- Uncomment this to add support for file uploads: -->
        <!-- <dependency> <groupId>org.apache.tapestry</groupId> <artifactId>tapestry-upload</artifactId> 
            <version>${tapestry-release-version}</version> </dependency> -->
        <!-- A dependency on either JUnit or TestNG is required, or the surefire plugin (which runs the 
            tests) will fail, preventing Maven from packaging the WAR. Tapestry includes a large number of testing 
            facilities designed for use with TestNG (http://testng.org/), so it's recommended. -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng-release-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-test</artifactId>
            <version>${tapestry-release-version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Provided by the servlet container, but sometimes referenced in the application code. -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet-api-release-version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Provide dependency to the Tapestry javadoc taglet which replaces the Maven component report -->
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-javadoc</artifactId>
            <version>${tapestry-release-version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${org.slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${org.slf4j.version}</version>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest-all.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-logger-api</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <!-- to get around bug https://github.com/junit-team/junit5/issues/801 -->
            <scope>test</scope>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <finalName>apache-tapestry</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler.plugin.version}</version>
                <configuration>
                    <source>${source.version}</source>
                    <target>${target.version}</target>
                    <optimize>true</optimize>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${compiler.surefire.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <tapestry.execution-mode>Qa</tapestry.execution-mode>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <!-- Run the application using "mvn jetty:run" -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>${compiler.jetty.version}</version>
                <configuration>
                    <!-- Log to the console. -->
                    <requestLog implementation="org.mortbay.jetty.NCSARequestLog">
                        <!-- This doesn't do anything for Jetty, but is a workaround for a Maven bug 
                            that prevents the requestLog from being set. -->
                        <append>true</append>
                    </requestLog>
                    <systemProperties>
                        <systemProperty>
                            <name>tapestry.execution-mode</name>
                            <value>development</value>
                        </systemProperty>
                    </systemProperties>
                </configuration>
            </plugin>
        </plugins>
    </build>

<!--    <repositories>-->
<!--        <repository>-->
<!--            <id>jboss</id>-->
<!--            <url>http://repository.jboss.org/nexus/content/groups/public/</url>-->
<!--        </repository>-->
<!--        &lt;!&ndash; This repository is only needed when the Tapestry version is a preview release, rather than -->
<!--            a final release. &ndash;&gt;-->
<!--        <repository>-->
<!--            <id>apache-staging</id>-->
<!--            <url>https://repository.apache.org/content/groups/staging/</url>-->
<!--        </repository>-->
<!--    </repositories>-->

    <properties>
        <compiler.jetty.version>6.1.16</compiler.jetty.version>
        <compiler.surefire.version>2.7.2</compiler.surefire.version>
        <compiler.plugin.version>2.3.2</compiler.plugin.version>
        <source.version>1.8</source.version>
        <target.version>1.8</target.version>
        <tapestry-release-version>5.4.5</tapestry-release-version>
        <servlet-api-release-version>2.5</servlet-api-release-version>
        <testng-release-version>6.8.21</testng-release-version>
        <slf4j-release-version>1.7.19</slf4j-release-version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <gib.referenceBranch>refs/remotes/origin/master</gib.referenceBranch>
        <gib.skipTestsForUpstreamModules>true</gib.skipTestsForUpstreamModules>
        <gib.buildUpstream>false</gib.buildUpstream>
        <gib.failOnMissingGitDir>false</gib.failOnMissingGitDir>
        <gib.failOnError>false</gib.failOnError>
        <gib.disable>true</gib.disable>

        <!-- used only in dependency management to force this version, not included as a direct dependency -->
        <junit.version>4.13.2</junit.version>
        <assertj.version>3.21.0</assertj.version>
        <hamcrest.version>2.2</hamcrest.version>
        <hamcrest-all.version>1.3</hamcrest-all.version>
        <mockito.version>4.1.0</mockito.version>
        <byte-buddy.version>1.11.20</byte-buddy.version>

        <!-- logging -->
        <org.slf4j.version>1.7.32</org.slf4j.version>
        <logback.version>1.2.6</logback.version>

        <!-- plugins -->
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
        <java.version>1.8</java.version>
        <log4j.version>1.2.17</log4j.version>
        <esapi.version>2.2.2.0</esapi.version>
        <jmh-core.version>1.33</jmh-core.version>
        <jmh-generator.version>1.33</jmh-generator.version>
        <maven-failsafe-plugin.version>2.21.0</maven-failsafe-plugin.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <commons-io.version>2.11.0</commons-io.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <commons-cli.version>1.4</commons-cli.version>
        <maven-war-plugin.version>3.0.0</maven-war-plugin.version>
        <javax.servlet-api.version>3.1.0</javax.servlet-api.version>
        <jstl-api.version>1.2</jstl-api.version>
        <javax.servlet.jsp-api.version>2.3.1</javax.servlet.jsp-api.version>
        <jstl.version>1.2</jstl.version>
        <jackson.version>2.13.0</jackson.version>
        <commons-fileupload.version>1.4</commons-fileupload.version>
        <junit-platform.version>1.8.1</junit-platform.version>
        <junit-jupiter.version>5.8.1</junit-jupiter.version>
        <junit-platform-surefire-provider.version>1.3.2</junit-platform-surefire-provider.version>
        <directory-maven-plugin.version>0.3.1</directory-maven-plugin.version>
        <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
        <custom-pmd.version>0.0.1</custom-pmd.version>
        <gitflow-incremental-builder.version>3.12.2</gitflow-incremental-builder.version>
        <maven-jxr-plugin.version>3.0.0</maven-jxr-plugin.version>
        <!-- <maven-pmd-plugin.version>3.9.0</maven-pmd-plugin.version> -->
        <maven-pmd-plugin.version>3.13.0</maven-pmd-plugin.version>
        <lombok.version>1.18.20</lombok.version>
        <h2.version>1.4.200</h2.version>
        <guava.version>31.0.1-jre</guava.version>
    </properties>

</project>